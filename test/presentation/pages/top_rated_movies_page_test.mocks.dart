// Mocks generated by Mockito 5.0.8 from annotations
// in movieflutter/test/presentation/pages/top_rated_movies_page_test.dart.
// Do not manually edit this file.

import 'dart:async' as i6;
import 'dart:ui' as i7;

import 'package:movieflutter/common/state_enum.dart' as i4;
import 'package:movieflutter/domain/entities/movie.dart' as i5;
import 'package:movieflutter/domain/usecases/get_top_rated_movies.dart' as i2;
import 'package:movieflutter/presentation/provider/top_rated_movies_notifier.dart'
    as i3;
import 'package:mockito/mockito.dart' as i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeGetTopRatedMovies extends i1.Fake implements i2.GetTopRatedMovies {
}

/// A class which mocks [TopRatedMoviesNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockTopRatedMoviesNotifier extends i1.Mock
    implements i3.TopRatedMoviesNotifier {
  MockTopRatedMoviesNotifier() {
    i1.throwOnMissingStub(this);
  }

  @override
  i2.GetTopRatedMovies get getTopRatedMovies =>
      (super.noSuchMethod(Invocation.getter(#getTopRatedMovies),
          returnValue: _FakeGetTopRatedMovies()) as i2.GetTopRatedMovies);
  @override
  i4.RequestState get state => (super.noSuchMethod(Invocation.getter(#state),
      returnValue: i4.RequestState.Empty) as i4.RequestState);
  @override
  List<i5.Movie> get movies => (super.noSuchMethod(Invocation.getter(#movies),
      returnValue: <i5.Movie>[]) as List<i5.Movie>);
  @override
  String get message =>
      (super.noSuchMethod(Invocation.getter(#message), returnValue: '')
          as String);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  i6.Future<void> fetchTopRatedMovies() =>
      (super.noSuchMethod(Invocation.method(#fetchTopRatedMovies, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as i6.Future<void>);
  @override
  void addListener(i7.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(i7.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
}
