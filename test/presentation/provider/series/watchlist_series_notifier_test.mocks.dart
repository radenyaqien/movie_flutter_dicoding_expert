// Mocks generated by Mockito 5.0.8 from annotations
// in movieflutter/test/presentation/provider/watchlist_movie_notifier_test.dart.
// Do not manually edit this file.

import 'dart:async' as i4;

import 'package:dartz/dartz.dart' as i2;
import 'package:movieflutter/common/failure.dart' as i5;
import 'package:movieflutter/domain/entities/series/series.dart' as i6;
import 'package:movieflutter/domain/usecases/series/get_watchlist_series.dart' as i3;
import 'package:mockito/mockito.dart' as i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeEither<L, R> extends i1.Fake implements i2.Either<L, R> {}

/// A class which mocks [GetWatchlistMovies].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchlistSeries extends i1.Mock
    implements i3.GetWatchlistSeries {
  MockGetWatchlistSeries() {
    i1.throwOnMissingStub(this);
  }

  @override
  i4.Future<i2.Either<i5.Failure, List<i6.Series>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
          returnValue: Future<i2.Either<i5.Failure, List<i6.Series>>>.value(
              _FakeEither<i5.Failure, List<i6.Series>>())) as i4
          .Future<i2.Either<i5.Failure, List<i6.Series>>>);
}
