// Mocks generated by Mockito 5.0.8 from annotations
// in movieflutter/test/presentation/provider/movie_detail_notifier_test.dart.
// Do not manually edit this file.

import 'dart:async' as i5;

import 'package:dartz/dartz.dart' as i3;
import 'package:movieflutter/common/failure.dart' as i6;
import 'package:movieflutter/domain/entities/series/series.dart' as i9;
import 'package:movieflutter/domain/entities/series/series_detail.dart' as i7;
import 'package:movieflutter/domain/repositories/series_repository.dart' as i2;
import 'package:movieflutter/domain/usecases/series/get_series_detail.dart'
    as i4;
import 'package:movieflutter/domain/usecases/series/get_series_recommendations.dart'
    as i8;
import 'package:movieflutter/domain/usecases/series/get_watchlist_series_status.dart'
    as i10;
import 'package:movieflutter/domain/usecases/series/remove_watchlist_series.dart'
    as i12;
import 'package:movieflutter/domain/usecases/series/save_watchlist_series.dart'
    as i11;
import 'package:mockito/mockito.dart' as i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeMovieRepository extends i1.Fake implements i2.SeriesRepository {}

class _FakeEither<L, R> extends i1.Fake implements i3.Either<L, R> {}

/// A class which mocks [i4.GetSeriesDetail].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetSeriesDetail extends i1.Mock implements i4.GetSeriesDetail {
  MockGetSeriesDetail() {
    i1.throwOnMissingStub(this);
  }

  @override
  i2.SeriesRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeMovieRepository()) as i2.SeriesRepository);

  @override
  i5.Future<i3.Either<i6.Failure, i7.SeriesDetail>> execute(int? id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
              returnValue:
                  Future<i3.Either<i6.Failure, i7.SeriesDetail>>.value(
                      _FakeEither<i6.Failure, i7.SeriesDetail>()))
          as i5.Future<i3.Either<i6.Failure, i7.SeriesDetail>>);
}

/// A class which mocks [GetMovieRecommendations].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetSeriesRecommendations extends i1.Mock
    implements i8.GetSeriesRecommendations {
  MockGetSeriesRecommendations() {
    i1.throwOnMissingStub(this);
  }

  @override
  i2.SeriesRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeMovieRepository()) as i2.SeriesRepository);

  @override
  i5.Future<i3.Either<i6.Failure, List<i9.Series>>> execute(dynamic id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
              returnValue:
                  Future<i3.Either<i6.Failure, List<i9.Series>>>.value(
                      _FakeEither<i6.Failure, List<i9.Series>>()))
          as i5.Future<i3.Either<i6.Failure, List<i9.Series>>>);
}

/// A class which mocks [GetWatchListStatus].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchListSeriesStatus extends i1.Mock
    implements i10.GetWatchListSeriesStatus {
  MockGetWatchListSeriesStatus() {
    i1.throwOnMissingStub(this);
  }

  @override
  i2.SeriesRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeMovieRepository()) as i2.SeriesRepository);

  @override
  i5.Future<bool> execute(int? id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
          returnValue: Future<bool>.value(false)) as i5.Future<bool>);
}

/// A class which mocks [SaveWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveWatchlistSeries extends i1.Mock implements i11.SaveWatchlistSeries {
  MockSaveWatchlistSeries() {
    i1.throwOnMissingStub(this);
  }

  @override
  i2.SeriesRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeMovieRepository()) as i2.SeriesRepository);

  @override
  i5.Future<i3.Either<i6.Failure, String>> execute(
          i7.SeriesDetail? movie) =>
      (super.noSuchMethod(Invocation.method(#execute, [movie]),
              returnValue: Future<i3.Either<i6.Failure, String>>.value(
                  _FakeEither<i6.Failure, String>()))
          as i5.Future<i3.Either<i6.Failure, String>>);
}

/// A class which mocks [RemoveWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveWatchlistSeries extends i1.Mock
    implements i12.RemoveWatchlistSeries {
  MockRemoveWatchlistSeries() {
    i1.throwOnMissingStub(this);
  }

  @override
  i2.SeriesRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeMovieRepository()) as i2.SeriesRepository);

  @override
  i5.Future<i3.Either<i6.Failure, String>> execute(
          i7.SeriesDetail? movie) =>
      (super.noSuchMethod(Invocation.method(#execute, [movie]),
              returnValue: Future<i3.Either<i6.Failure, String>>.value(
                  _FakeEither<i6.Failure, String>()))
          as i5.Future<i3.Either<i6.Failure, String>>);
}
