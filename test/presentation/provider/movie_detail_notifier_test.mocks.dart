// Mocks generated by Mockito 5.0.8 from annotations
// in movieflutter/test/presentation/provider/movie_detail_notifier_test.dart.
// Do not manually edit this file.

import 'dart:async' as i5;

import 'package:dartz/dartz.dart' as i3;
import 'package:movieflutter/common/failure.dart' as i6;
import 'package:movieflutter/domain/entities/movie.dart' as i9;
import 'package:movieflutter/domain/entities/movie_detail.dart' as i7;
import 'package:movieflutter/domain/repositories/movie_repository.dart' as i2;
import 'package:movieflutter/domain/usecases/get_movie_detail.dart' as i4;
import 'package:movieflutter/domain/usecases/get_movie_recommendations.dart' as i8;
import 'package:movieflutter/domain/usecases/get_watchlist_status.dart' as i10;
import 'package:movieflutter/domain/usecases/remove_watchlist.dart' as i12;
import 'package:movieflutter/domain/usecases/save_watchlist.dart' as i11;
import 'package:mockito/mockito.dart' as i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeMovieRepository extends i1.Fake implements i2.MovieRepository {}

class _FakeEither<L, R> extends i1.Fake implements i3.Either<L, R> {}

/// A class which mocks [GetMovieDetail].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetMovieDetail extends i1.Mock implements i4.GetMovieDetail {
  MockGetMovieDetail() {
    i1.throwOnMissingStub(this);
  }

  @override
  i2.MovieRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeMovieRepository()) as i2.MovieRepository);
  @override
  i5.Future<i3.Either<i6.Failure, i7.MovieDetail>> execute(int? id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
          returnValue: Future<i3.Either<i6.Failure, i7.MovieDetail>>.value(
              _FakeEither<i6.Failure, i7.MovieDetail>())) as i5
          .Future<i3.Either<i6.Failure, i7.MovieDetail>>);
}

/// A class which mocks [GetMovieRecommendations].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetMovieRecommendations extends i1.Mock
    implements i8.GetMovieRecommendations {
  MockGetMovieRecommendations() {
    i1.throwOnMissingStub(this);
  }

  @override
  i2.MovieRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeMovieRepository()) as i2.MovieRepository);
  @override
  i5.Future<i3.Either<i6.Failure, List<i9.Movie>>> execute(dynamic id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
          returnValue: Future<i3.Either<i6.Failure, List<i9.Movie>>>.value(
              _FakeEither<i6.Failure, List<i9.Movie>>())) as i5
          .Future<i3.Either<i6.Failure, List<i9.Movie>>>);
}

/// A class which mocks [GetWatchListStatus].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchListStatus extends i1.Mock
    implements i10.GetWatchListStatus {
  MockGetWatchListStatus() {
    i1.throwOnMissingStub(this);
  }

  @override
  i2.MovieRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeMovieRepository()) as i2.MovieRepository);
  @override
  i5.Future<bool> execute(int? id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
          returnValue: Future<bool>.value(false)) as i5.Future<bool>);
}

/// A class which mocks [SaveWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveWatchlist extends i1.Mock implements i11.SaveWatchlist {
  MockSaveWatchlist() {
    i1.throwOnMissingStub(this);
  }

  @override
  i2.MovieRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeMovieRepository()) as i2.MovieRepository);
  @override
  i5.Future<i3.Either<i6.Failure, String>> execute(i7.MovieDetail? movie) =>
      (super.noSuchMethod(Invocation.method(#execute, [movie]),
              returnValue: Future<i3.Either<i6.Failure, String>>.value(
                  _FakeEither<i6.Failure, String>()))
          as i5.Future<i3.Either<i6.Failure, String>>);
}

/// A class which mocks [RemoveWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveWatchlist extends i1.Mock implements i12.RemoveWatchlist {
  MockRemoveWatchlist() {
    i1.throwOnMissingStub(this);
  }

  @override
  i2.MovieRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeMovieRepository()) as i2.MovieRepository);
  @override
  i5.Future<i3.Either<i6.Failure, String>> execute(i7.MovieDetail? movie) =>
      (super.noSuchMethod(Invocation.method(#execute, [movie]),
              returnValue: Future<i3.Either<i6.Failure, String>>.value(
                  _FakeEither<i6.Failure, String>()))
          as i5.Future<i3.Either<i6.Failure, String>>);
}
